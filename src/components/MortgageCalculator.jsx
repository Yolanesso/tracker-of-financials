import React, { useState } from 'react';
import '../scss/mortgagecalculator.scss';

export default function MortgageCalculator() {
  const [loanAmount, setLoanAmount] = useState(3000000);
  const [loanTerm, setLoanTerm] = useState(20);
  const [interestRate, setInterestRate] = useState(8.5);
  const [monthlyPayment, setMonthlyPayment] = useState(0);
  const [totalPayment, setTotalPayment] = useState(0);
  const [overpayment, setOverpayment] = useState(0);

  const handleInputChange = (setter) => (e) => {
    const value = parseFloat(e.target.value);
    setter(isNaN(value) || value < 0 ? 0 : value);
  };

  const calculateMortgage = () => {
    if (loanAmount <= 0 || loanTerm <= 0 || interestRate < 0) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–±–æ–ª—å—à–µ 0)');
      return;
    }

    const principal = parseFloat(loanAmount);
    const annualRate = parseFloat(interestRate) / 100;
    const months = parseInt(loanTerm) * 12;
    const monthlyRate = annualRate / 12;

    if (monthlyRate > 0) {
      const annuityFactor =
        (monthlyRate * Math.pow(1 + monthlyRate, months)) / (Math.pow(1 + monthlyRate, months) - 1);
      const monthly = principal * annuityFactor;
      setMonthlyPayment(monthly.toFixed(2));
      setTotalPayment((monthly * months).toFixed(2));
      setOverpayment((monthly * months - principal).toFixed(2));
    } else {
      const monthly = principal / months;
      setMonthlyPayment(monthly.toFixed(2));
      setTotalPayment(principal.toFixed(2));
      setOverpayment('0.00');
    }
  };

  return (
    <div className="mortgage__container">
      <h2>–ò–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</h2>
      <div className="mortgage__inputs">
        <label>–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚ÇΩ):</label>
        <input type="number" value={loanAmount} onChange={handleInputChange(setLoanAmount)} />

        <label>–°—Ä–æ–∫ (–ª–µ—Ç):</label>
        <input type="number" value={loanTerm} onChange={handleInputChange(setLoanTerm)} />

        <label>–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (%):</label>
        <input type="number" value={interestRate} onChange={handleInputChange(setInterestRate)} />

        <button onClick={calculateMortgage}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>
      </div>

      <div className="mortgage__results">
        <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã</h3>
        <p>
          üìå –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: <b>{monthlyPayment} ‚ÇΩ</b>
        </p>
        <p>
          üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç: <b>{totalPayment} ‚ÇΩ</b>
        </p>
        <p>
          üìâ –ü–µ—Ä–µ–ø–ª–∞—Ç–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É: <b>{overpayment} ‚ÇΩ</b>
        </p>
      </div>
    </div>
  );
}
